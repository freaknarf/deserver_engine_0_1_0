<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Event:
fine=false
i = 0;
j=0
alarm[0] = 3;
C=0
xx=0
randa=irandom(50)
randb=irandom(360)
randc=irandom(180)

a1=45.01
a2=45.02
a3=4
a4=3
leave_scale=1
shape=false
//randomize()

screenshot=false


angle=0

//draw_pythagoras_tree( i, x, y, (30), (45))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if keyboard_check(ord("T"))
   {
  

if keyboard_check(vk_up)
{
   if keyboard_check(vk_shift)
      {
      i++
      }
      if !keyboard_check(vk_shift)
      {
      a3++
      }
}

if keyboard_check(vk_down)
{
   if keyboard_check(vk_shift)
      {
      i--                     //iterations
      }
      if !keyboard_check(vk_shift)
      {
      a3--                        //etage feuille
      }
}

///fine set

if keyboard_check_pressed(ord ("F"))
{if fine=true 
fine=false 
else 
if fine=false
fine=true
}


if mouse_check_button_pressed(mb_left)
{var a,b;


view_xview[0]=mouse_x-view_wview[0];
view_yview[0]=mouse_y-view_hview[0];

}

if keyboard_check_pressed(vk_add)
leave_scale+=0.1
if keyboard_check_pressed(vk_subtract)
leave_scale-=0.1



text[0]=string("fine:")+string(fine)
text[1]=a1
text[2]=a2
text[3]=string("shape:")+string(shape)



//a4


if keyboard_check_pressed(vk_pageup)
a4++
if keyboard_check_pressed(vk_pagedown)
a4--


///show rectangles shape


if keyboard_check_pressed(ord ("S"))
{if shape=true 
shape=false 
else 
if shape=false
shape=true
}

if keyboard_check(vk_left)
{
angle++
}
if keyboard_check(vk_right)
{
angle--
}




   }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randa=irandom(5)
randb=irandom(360)
randc=irandom(180)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if keyboard_check(vk_control)
{
view_wview[0]-=10
}else



if keyboard_check(vk_alt)
{
view_hview[0]-=10
}else


if (!keyboard_check(vk_control) and !keyboard_check(vk_alt))
{

if fine
{
if keyboard_check(vk_shift)
{
a2-=0.1
}
if !keyboard_check(vk_shift)
{
a1-=0.1
}
}
else
{
if keyboard_check(vk_shift)
{
a2-=1
}
if !keyboard_check(vk_shift)
{
a1-=1
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if keyboard_check(vk_control)
{
view_wview[0]+=10
}else


if keyboard_check(vk_alt)
{
view_hview[0]+=10
}else



if (!keyboard_check(vk_control) and !keyboard_check(vk_alt))
{
if keyboard_check(vk_shift)
{if fine=true
a2+=0.1 else a2+=1
}
if !keyboard_check(vk_shift)
{if fine=true
a1+=0.1 else a1+=1
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self()


//draw_pythagoras_tree( i, x, y, (a1), (a2))

/*
for (j=0;j&lt;=3;j++)
{
draw_text(16,16+16*j,string(text[j]))
}
draw_set_colour(c_red)*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
