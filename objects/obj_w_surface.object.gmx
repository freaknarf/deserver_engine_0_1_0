<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = -1;
surface_variable=-1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord("K")) //keep surf...
    {
    surface_save(surf, "test.png");
    show_debug_message("save surface...")
    }
    
if keyboard_check_pressed(ord("L"))
  {//spr = sprite_add("test.png", 16, true, true, 0, 0);
  surfState = background_add("test.png", 0, 0);
  
w = background_get_width(surfState);
h = background_get_height(surfState);

surface_variable = surface_create(w, h);
surface_set_target(surface_variable);
draw_clear_alpha(c_black, 0);
draw_background(surfState, 0, 0);
show_debug_message("draw...")
show_debug_message(w)
surface_reset_target();
  }
  
  if keyboard_check_pressed(ord("S"))
  
  
  {
  if surface_exists(surf)
{

surface_reset_target();
surface_free(surf);

}


if surface_exists(surface_variable)
{

surface_reset_target();
surface_free(surface_variable);

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surf)
{
surface_free(surf);
}

if surface_exists(surface_variable)
{
surface_free(surface_variable);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if file_exists("test.png")
{
surfState = background_add("test.png", 0, 0);
  
w = background_get_width(surfState);
h = background_get_height(surfState);

surface_variable = surface_create(w, h);
surface_set_target(surface_variable);
draw_clear_alpha(c_black, 0);
draw_background(surfState, 0, 0);
show_debug_message("draw...")
show_debug_message(w)
surface_reset_target();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if surface_exists(surf)
{
draw_surface(surf, 0, 0);


}
else
{


surf = surface_create(room_width, room_height);
surface_set_target(surf);


    {if instance_exists(obj_w)
    with (obj_w)
        {
   //     if instance_exists(obj_Light)
     //   {
        
       // distance_to_light=distance_to_object(obj_Light)
         //if life&gt;=0
         
        
       {
//if sprite_exists(back_image)
draw_sprite_ext(back_image,image_index,x,y,image_xscale,image_yscale,image_angle,c_gray,1)
//else show_debug_message("surface de merde")

    //    draw_sprite(sprite_index, image_index,x,y);
      
     //   }
        
        
        
       // else if collision_line(x,y,obj_Light.x,obj_Light.y,obj_w,obj_Light,true)// and (distance_to_light &gt;= obj_Light.sprite_height/2)
         //   {
          //  if x&lt;obj_Light.x
        //draw_sprite_ext(sprite_index, image_index, x - i, y + i, 1, 1, 0, c_black, a);
        //if x&gt;=obj_Light.x
        //     draw_sprite_ext(sprite_index, image_index, x + i, y + i, 1, 1, 0, c_black, a);
        //}
        //else {}
        
        
        
        }}
    }
//draw_set_blend_mode(bm_normal);
surface_reset_target();
}





if keyboard_check_pressed(ord("K")) //keep surf...
    {
    surface_save(surf, "test.png");
    show_debug_message("save surface...")
    }
    

  
  
  
  if surface_exists(surface_variable)
{
draw_surface(surface_variable, 0, 0);


}

else

if keyboard_check_pressed(ord("L"))
  {//spr = sprite_add("test.png", 16, true, true, 0, 0);
  if file_exists("text.png")
{  surfState = background_add("test.png", 0, 0);
  
w = background_get_width(surfState);
h = background_get_height(surfState);

surface_variable = surface_create(w, h);
surface_set_target(surface_variable);
draw_clear_alpha(c_black, 0);
draw_background(surfState, 0, 0);
show_debug_message("draw...")
show_debug_message(w)
surface_reset_target();

 /* {
  
 // if file_exists("test.png")
{
    surfState = background_add("test.png", 0, 0);
  
w = background_get_width(surfState);
h = background_get_height(surfState);

surface_variable = surface_create(w, h);
surface_set_target(surface_variable);
draw_clear_alpha(c_black, 0);
draw_background(surfState, 0, 0);
show_debug_message("draw...")
show_debug_message(w)
surface_reset_target();
  }}*/
}  

      }
      
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
